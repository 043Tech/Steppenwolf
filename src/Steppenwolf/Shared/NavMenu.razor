@using Microsoft.AspNetCore.Http
@using Steppenwolf.Services.Data
@using Steppenwolf.Services.Models
@inject CategoryService CategoryService
<nav class="navbar navbar-expand-md navbar-dark bg-dark">
    <div class="navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2">
        <ul class="navbar-nav mr-auto">
            @foreach (var category in categories)
            {
                <li class="nav-item">
                    <NavLink class="nav-link" href="@category.Slug">
                        @category.Name
                    </NavLink>
                </li>
            }
        </ul>
    </div>
    <div class="mx-auto order-0">
        <a class="navbar-brand mx-auto" href="/">Home</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".dual-collapse2">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
    <div class="navbar-collapse collapse w-100 order-3 dual-collapse2">
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <NavLink class="nav-link" href="about">
                    About
                </NavLink>
            </li>
            <AuthorizeView>
                <Authorized>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@HttpContextAccessor.HttpContext.User.Identity.Name</a>
                        <div class="dropdown-menu">
                            <NavLink class="dropdown-item text-center" href="Identity/Account/Manage">
                                Manage
                            </NavLink>
                            <div class="dropdown-item">
                                <form action="Identity/Account/Logout" method="post">
                                    <button type="submit" class="dropdown-item">Logout</button>
                                </form>
                            </div>
                        </div>
                    </li>
                </Authorized>
                <NotAuthorized>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="Identity/Account/Register">
                            Register
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="Identity/Account/Login">
                            Login
                        </NavLink>
                    </li>
                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </div>
</nav>

@code {

    private IEnumerable<Category> categories;

    [Inject]
    private IHttpContextAccessor HttpContextAccessor { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        this.categories = CategoryService.GetCategories();

        await Task.CompletedTask;
    }

}